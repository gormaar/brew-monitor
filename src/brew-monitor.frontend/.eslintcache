[{"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\index.tsx":"1","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\app.tsx":"2","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\screens\\brewFormScreen\\index.tsx":"3","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\screens\\dashboardScreen\\index.tsx":"4","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useBrew.ts":"5","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useIngredients.ts":"6","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useGravity.ts":"7","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\index.tsx":"8","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\select\\index.tsx":"9","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\navbar\\index.tsx":"10","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\constants.ts":"11","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\gravity\\index.tsx":"12","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\airlock\\longTermAirlock\\index.tsx":"13","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\airlock\\shortTermAirlock\\index.tsx":"14","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\temperature\\shortTermTemperature\\index.tsx":"15","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\temperature\\longTermTemperature\\index.tsx":"16","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\details\\detailsTable\\index.tsx":"17","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\ingredients\\hopsGraph\\index.tsx":"18","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\ingredients\\barleyGraph\\index.tsx":"19","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\status\\index.tsx":"20","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useAirlock.ts":"21","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useTemperature.ts":"22","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\respirator\\index.tsx":"23","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\graphs\\line\\index.tsx":"24","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\graphs\\bar\\index.tsx":"25","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\graphs\\pie\\index.tsx":"26"},{"size":392,"mtime":1630658118309,"results":"27","hashOfConfig":"28"},{"size":553,"mtime":1630658118289,"results":"29","hashOfConfig":"28"},{"size":688,"mtime":1630658118310,"results":"30","hashOfConfig":"28"},{"size":2050,"mtime":1630658118311,"results":"31","hashOfConfig":"28"},{"size":2105,"mtime":1634675337461,"results":"32","hashOfConfig":"28"},{"size":975,"mtime":1634675385835,"results":"33","hashOfConfig":"28"},{"size":888,"mtime":1634675363087,"results":"34","hashOfConfig":"28"},{"size":2002,"mtime":1630658118306,"results":"35","hashOfConfig":"28"},{"size":1755,"mtime":1630658118291,"results":"36","hashOfConfig":"28"},{"size":483,"mtime":1618133923141,"results":"37","hashOfConfig":"28"},{"size":366,"mtime":1637185129086,"results":"38","hashOfConfig":"28"},{"size":1086,"mtime":1630658118300,"results":"39","hashOfConfig":"28"},{"size":1423,"mtime":1630658118297,"results":"40","hashOfConfig":"28"},{"size":1398,"mtime":1630658118299,"results":"41","hashOfConfig":"28"},{"size":1279,"mtime":1630658118305,"results":"42","hashOfConfig":"28"},{"size":1433,"mtime":1630658118303,"results":"43","hashOfConfig":"28"},{"size":2217,"mtime":1637216795553,"results":"44","hashOfConfig":"28"},{"size":678,"mtime":1630658118296,"results":"45","hashOfConfig":"28"},{"size":691,"mtime":1630658118295,"results":"46","hashOfConfig":"28"},{"size":1646,"mtime":1630658118302,"results":"47","hashOfConfig":"28"},{"size":931,"mtime":1634675464709,"results":"48","hashOfConfig":"28"},{"size":970,"mtime":1634675410435,"results":"49","hashOfConfig":"28"},{"size":984,"mtime":1630658118301,"results":"50","hashOfConfig":"28"},{"size":2305,"mtime":1630658118290,"results":"51","hashOfConfig":"28"},{"size":2738,"mtime":1630658118290,"results":"52","hashOfConfig":"28"},{"size":2606,"mtime":1630658118291,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"p3ijex",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\index.tsx",[],["116","117"],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\app.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\screens\\brewFormScreen\\index.tsx",["118"],"import React, { FC, Fragment } from 'react';\r\nimport { Box, Typography, Tabs, Tab } from '@material-ui/core';\r\n\r\nimport Navbar from '../../components/common/navbar';\r\nimport './styles.scss';\r\n\r\nconst BrewFormScreen: FC = () => {\r\n  return (\r\n    <Fragment>\r\n      <Navbar>\r\n        <Tab></Tab>\r\n      </Navbar>\r\n      <Box className=\"mainContentWrapper\">\r\n        <Typography variant=\"h3\" gutterBottom className=\"formHeader\">\r\n          Create brew\r\n        </Typography>\r\n        <Box className=\"formContainer\">\r\n          <Box className=\"brewForm\">\r\n            <h3>Brew</h3>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BrewFormScreen;\r\n","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\screens\\dashboardScreen\\index.tsx",["119","120","121","122"],"import React, { FC, Fragment, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Box, Typography, Button, makeStyles } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Statistics from '../../components/statistics';\r\nimport Navbar from '../../components/common/navbar';\r\nimport BrewSelector from '../../components/common/select';\r\nimport useBrew from '../../hooks/useBrew';\r\nimport useIngredients from '../../hooks/useIngredients';\r\nimport useGravity from '../../hooks/useGravity';\r\nimport './styles.scss';\r\n\r\ntype DashBoardParams = {\r\n  brewId: string;\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  brewFormButton: {\r\n    position: 'absolute',\r\n    right: 16,\r\n    backgroundColor: '#7fc97f',\r\n    '&:hover': {\r\n      backgroundColor: '#97f097',\r\n    },\r\n  },\r\n});\r\n\r\nconst DashboardScreen: FC = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { brewId } = useParams<DashBoardParams>();\r\n  const { brew, brews, fetchBrew } = useBrew();\r\n  const { ingredients, fetchIngredients } = useIngredients();\r\n  const { fetchGravity, gravity } = useGravity();\r\n\r\n  useEffect(() => {\r\n    if (brewId) {\r\n      fetchIngredients(brewId);\r\n      fetchBrew(brewId);\r\n      fetchGravity(brewId);\r\n    }\r\n  }, [brewId]);\r\n\r\n  useEffect(() => {\r\n    if (brews[0]) history.push(`/brew/${brews[0]?.id}`);\r\n  }, [brews]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar>\r\n        {brews[0] && <BrewSelector brews={brews} activeBrew={brew} />}\r\n        {/* <Button type=\"button\" onClick={() => history.push('/brew/create')} className={classes.brewFormButton}>\r\n          Create brew\r\n        </Button> */}\r\n      </Navbar>\r\n      <Box className=\"dashboard\">\r\n        <Box className=\"dashboard__header\">\r\n          <Typography variant=\"h3\" gutterBottom>\r\n            {brew?.name}\r\n          </Typography>\r\n        </Box>\r\n        <Statistics activeBrew={brew} ingredients={ingredients} gravity={gravity} />\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DashboardScreen;\r\n","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useBrew.ts",["123"],"import { useState, useEffect } from 'react';\r\nimport { getBackendBaseUri } from '../constants'\r\nimport Brew from '../types/Brew';\r\n\r\nconst header = {\r\n  'Content-type': 'application/json',\r\n};\r\n\r\nconst useBrew = () => {\r\n  const [brews, setBrews] = useState<Brew[]>([]);\r\n  const [brew, setBrew] = useState<Brew>(brews[0]);\r\n  const apiBaseUrl = getBackendBaseUri();\r\n\r\n  useEffect(() => {\r\n    fetchBrews();\r\n  }, []);\r\n\r\n  const fetchBrews = async (): Promise<void> => {\r\n    const options = { method: 'GET', header: { 'Content-Type': 'application/json' } };\r\n    try {\r\n      const response = await fetch(`${apiBaseUrl}/brews`, options).then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      });\r\n      const data = (await response.json()) as Brew[];\r\n      setBrews(data);\r\n    } catch (e) {\r\n      console.log(`Error while fetching brews: ${e}`);\r\n    }\r\n  };\r\n\r\n  const fetchBrew = async (brewId: string): Promise<void> => {\r\n    const options = { method: 'GET', header: { 'Content-Type': 'application/json' } };\r\n    try {\r\n      const response = await fetch(`${apiBaseUrl}/brew/${brewId}`, options).then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      });\r\n      const data = (await response.json()) as Brew;\r\n      setBrew(data);\r\n    } catch (e) {\r\n      console.log(`Error while fetching brewId ${brewId}: ${e}`);\r\n    }\r\n  }; \r\n\r\n  const updateBrew = async (brew: Brew): Promise<void> => {\r\n    const options = { method: 'PUT', headers: header, body: JSON.stringify(brew) };\r\n    try {\r\n      await fetch(`${apiBaseUrl}/brew/update`, options).then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      });\r\n    } catch (e) {\r\n      console.log(`Error while updating brewId ${brew.id}: ${e}`);\r\n    }\r\n  };\r\n\r\n  return {\r\n    brew,\r\n    brews,\r\n    fetchBrew,\r\n    fetchBrews,\r\n    updateBrew,\r\n  };\r\n};\r\n\r\nexport default useBrew;\r\n","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useIngredients.ts",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useGravity.ts",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\select\\index.tsx",["124"],"import React, { FC, Fragment, useState } from 'react';\r\nimport { FormControl, MenuItem, InputLabel, makeStyles, Input, colors } from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport './styles.scss';\r\nimport Brew from '../../../types/Brew';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\ntype BrewSelectorProps = {\r\n  activeBrew?: Brew;\r\n  brews: Brew[];\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  select: {\r\n    color: '#e9ecf0',\r\n  },\r\n  underline: {\r\n    '&:after': {\r\n      borderBottom: '2px solid #7fc97f',\r\n    },\r\n  },\r\n});\r\n\r\nconst BrewSelector: FC<BrewSelectorProps> = ({ activeBrew, brews }) => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [selectedBrew, setSelectedBrew] = useState<string>(activeBrew?.name ?? '');\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSelectedBrew(event.target.value as string);\r\n    history.push(`/brew/${event.target.value as string}`);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <FormControl>\r\n        <InputLabel id=\"brewSelector__label\" className=\"select\" disabled>\r\n          Brews\r\n        </InputLabel>\r\n        <Select\r\n          style={{ borderColor: '#e9ecf0', color: '#e9ecf0' }}\r\n          className=\"select\"\r\n          onChange={handleChange}\r\n          labelId=\"brewSelector__label\"\r\n          value={selectedBrew ?? ''}\r\n          defaultValue=\"\"\r\n          input={<Input classes={{ underline: classes.underline }} />}\r\n        >\r\n          {brews.map((brew) => (\r\n            <MenuItem key={`brew__${brew.id}`} value={brew.id}>\r\n              {brew.name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BrewSelector;\r\n","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\navbar\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\constants.ts",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\gravity\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\airlock\\longTermAirlock\\index.tsx",["125"],"import React, { FC, useEffect } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Serie } from '@nivo/line';\r\n\r\nimport LineGraph from '../../../../common/graphs/line';\r\nimport useAirlock from '../../../../../hooks/useAirlock';\r\nimport Brew from '../../../../../types/Brew';\r\nimport './styles.scss';\r\n\r\ntype LongTermAirlockGraphProps = {\r\n  activeBrew: Brew;\r\n};\r\n\r\nconst LongTermAirlockGraph: FC<LongTermAirlockGraphProps> = ({ activeBrew }) => {\r\n  const { airlocks, fetchAirlocks } = useAirlock();\r\n\r\n  useEffect(() => {\r\n    if (activeBrew?.id) {\r\n      fetchAirlocks(activeBrew?.id);\r\n    }\r\n  }, [activeBrew]);\r\n\r\n  if (airlocks === undefined) {\r\n    return null;\r\n  }\r\n\r\n  const longTermActivity = airlocks.filter((a) => a.activityLongterm !== 0);\r\n\r\n  const airlockData: Serie[] = [\r\n    {\r\n      id: 'Long term airlock activity',\r\n      data: longTermActivity.map((airlock) => {\r\n        const createdAt = new Date(airlock.createdAt).toLocaleDateString('no', {\r\n          year: 'numeric',\r\n          month: '2-digit',\r\n          day: '2-digit',\r\n          hour: 'numeric',\r\n          minute: 'numeric',\r\n        });\r\n        return { x: createdAt, y: airlock.activityLongterm };\r\n      }),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box className=\"longTermAirlockGraph\">\r\n      <LineGraph data={airlockData} xLegend=\"Time\" yLegend=\"Activity\" />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LongTermAirlockGraph;\r\n","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\airlock\\shortTermAirlock\\index.tsx",["126"],"import React, { FC, useEffect } from 'react';\r\nimport { Serie } from '@nivo/line';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport LineGraph from '../../../../common/graphs/line';\r\nimport Respirator from '../../respirator';\r\nimport useAirlock from '../../../../../hooks/useAirlock';\r\nimport Brew from '../../../../../types/Brew';\r\nimport './styles.scss';\r\n\r\ntype ShortTermAirlockProps = {\r\n  activeBrew: Brew;\r\n};\r\n\r\nconst ShortTermAirlockGraph: FC<ShortTermAirlockProps> = ({ activeBrew }) => {\r\n  const { airlocks, fetchAirlocks } = useAirlock();\r\n\r\n  useEffect(() => {\r\n    if (activeBrew?.id) {\r\n      fetchAirlocks(activeBrew?.id);\r\n    }\r\n  }, [activeBrew]);\r\n\r\n  if (airlocks === undefined) {\r\n    return null;\r\n  }\r\n\r\n  const recentAirlocks = airlocks.slice(Math.max(airlocks.length - 12, 1));\r\n\r\n  const airlockData: Serie[] = [\r\n    {\r\n      id: 'Short term airlock activity',\r\n      data: recentAirlocks.map((airlock) => {\r\n        const createdAt = new Date(airlock.createdAt).toTimeString().slice(0, 8);\r\n        return { x: createdAt, y: airlock.activity };\r\n      }),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box className=\"shortTermAirlockGraph\">\r\n      {airlocks[1]?.activity && <Respirator frequency={airlocks[airlocks.length - 1].activity} />}\r\n      <LineGraph data={airlockData} xLegend=\"Time\" yLegend=\"Activity\" />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ShortTermAirlockGraph;\r\n","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\temperature\\shortTermTemperature\\index.tsx",["127"],"import React, { FC, useEffect } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Serie } from '@nivo/line';\r\n\r\nimport LineGraph from '../../../../common/graphs/line';\r\nimport Brew from '../../../../../types/Brew';\r\nimport useTemperature from '../../../../../hooks/useTemperature';\r\nimport './styles.scss';\r\n\r\ntype ShortTermTempGraphProps = {\r\n  activeBrew: Brew;\r\n};\r\n\r\nconst ShortTermTemperatureGraph: FC<ShortTermTempGraphProps> = ({ activeBrew }) => {\r\n  const { temperatures, fetchTemperatures } = useTemperature();\r\n\r\n  useEffect(() => {\r\n    if (activeBrew?.id) {\r\n      fetchTemperatures(activeBrew?.id);\r\n    }\r\n  }, [activeBrew]);\r\n\r\n  if (!temperatures) {\r\n    return null;\r\n  }\r\n\r\n  const recentTemperature = temperatures.slice(Math.max(temperatures.length - 12, 1));\r\n\r\n  const tempData: Serie[] = [\r\n    {\r\n      id: 'Temperature short term',\r\n      data: recentTemperature.map((temp) => {\r\n        const createdAt = new Date(temp.createdAt).toTimeString().slice(0, 8);\r\n        return { x: createdAt, y: temp.value };\r\n      }),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box className=\"shortTermTemperatureGraph\">\r\n      <LineGraph data={tempData} xLegend=\"Date\" yLegend=\"Temperature\" />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ShortTermTemperatureGraph;\r\n","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\temperature\\longTermTemperature\\index.tsx",["128"],"import React, { FC, useEffect } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Serie } from '@nivo/line';\r\n\r\nimport LineGraph from '../../../../common/graphs/line';\r\nimport Brew from '../../../../../types/Brew';\r\nimport useTemperature from '../../../../../hooks/useTemperature';\r\nimport './styles.scss';\r\n\r\ntype LongTermTempGraphProps = {\r\n  activeBrew: Brew;\r\n};\r\n\r\nconst LongTermTemperatureGraph: FC<LongTermTempGraphProps> = ({ activeBrew }) => {\r\n  const { temperatures, fetchTemperatures } = useTemperature();\r\n\r\n  useEffect(() => {\r\n    if (activeBrew?.id) {\r\n      fetchTemperatures(activeBrew?.id);\r\n    }\r\n  }, [activeBrew]);\r\n\r\n  if (!temperatures) {\r\n    return null;\r\n  }\r\n\r\n  const longtermTemperatures = temperatures.filter((t) => t.longTermValue !== 0);\r\n\r\n  const tempData: Serie[] = [\r\n    {\r\n      id: 'Temperature long term',\r\n      data: longtermTemperatures.map((temp) => {\r\n        const createdAt = new Date(temp.createdAt).toLocaleDateString('no', {\r\n          year: 'numeric',\r\n          month: '2-digit',\r\n          day: '2-digit',\r\n          hour: 'numeric',\r\n          minute: 'numeric',\r\n        });\r\n        return { x: createdAt, y: temp.longTermValue };\r\n      }),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box className=\"longTermTemperatureGraph\">\r\n      <LineGraph data={tempData} xLegend=\"Date\" yLegend=\"Temperature\" />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LongTermTemperatureGraph;\r\n","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\details\\detailsTable\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\ingredients\\hopsGraph\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\ingredients\\barleyGraph\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\status\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useAirlock.ts",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useTemperature.ts",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\respirator\\index.tsx",["129"],"import React, { FC, Fragment, useState, useEffect } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport './styles.scss';\r\n\r\ntype RespiratorProps = {\r\n  frequency: number | undefined;\r\n};\r\n\r\nconst Respirator: FC<RespiratorProps> = ({ frequency }) => {\r\n  const [blink, setBlink] = useState<boolean>(false);\r\n\r\n  const sleep = (milliseconds: number) => {\r\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\r\n  };\r\n  const simulateAirlockFrequency = async () => {\r\n    if (frequency) {\r\n      const frequencyTimeout = 60 / frequency;\r\n      for (let i = 0; i <= frequency; i++) {\r\n        setBlink(true);\r\n        await sleep(1000);\r\n        setBlink(false);\r\n        await sleep(frequencyTimeout * 1000);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    simulateAirlockFrequency();\r\n  }, [frequency]);\r\n\r\n  return <Fragment>{blink ? <Box className=\"respirator\" /> : <Box className=\"respirator--blink\" />}</Fragment>;\r\n};\r\n\r\nexport default Respirator;\r\n","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\graphs\\line\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\graphs\\bar\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\graphs\\pie\\index.tsx",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":2,"column":27,"nodeType":"136","messageId":"137","endLine":2,"endColumn":31},{"ruleId":"134","severity":1,"message":"138","line":3,"column":27,"nodeType":"136","messageId":"137","endLine":3,"endColumn":33},{"ruleId":"134","severity":1,"message":"139","line":30,"column":9,"nodeType":"136","messageId":"137","endLine":30,"endColumn":16},{"ruleId":"140","severity":1,"message":"141","line":43,"column":6,"nodeType":"142","endLine":43,"endColumn":14,"suggestions":"143"},{"ruleId":"140","severity":1,"message":"144","line":47,"column":6,"nodeType":"142","endLine":47,"endColumn":13,"suggestions":"145"},{"ruleId":"140","severity":1,"message":"146","line":16,"column":6,"nodeType":"142","endLine":16,"endColumn":8,"suggestions":"147"},{"ruleId":"134","severity":1,"message":"148","line":2,"column":64,"nodeType":"136","messageId":"137","endLine":2,"endColumn":70},{"ruleId":"140","severity":1,"message":"149","line":21,"column":6,"nodeType":"142","endLine":21,"endColumn":18,"suggestions":"150"},{"ruleId":"140","severity":1,"message":"149","line":22,"column":6,"nodeType":"142","endLine":22,"endColumn":18,"suggestions":"151"},{"ruleId":"140","severity":1,"message":"152","line":21,"column":6,"nodeType":"142","endLine":21,"endColumn":18,"suggestions":"153"},{"ruleId":"140","severity":1,"message":"152","line":21,"column":6,"nodeType":"142","endLine":21,"endColumn":18,"suggestions":"154"},{"ruleId":"140","severity":1,"message":"155","line":29,"column":6,"nodeType":"142","endLine":29,"endColumn":17,"suggestions":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"@typescript-eslint/no-unused-vars","'Tabs' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchBrew', 'fetchGravity', and 'fetchIngredients'. Either include them or remove the dependency array.","ArrayExpression",["159"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["160"],"React Hook useEffect has a missing dependency: 'fetchBrews'. Either include it or remove the dependency array.",["161"],"'colors' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchAirlocks'. Either include it or remove the dependency array.",["162"],["163"],"React Hook useEffect has a missing dependency: 'fetchTemperatures'. Either include it or remove the dependency array.",["164"],["165"],"React Hook useEffect has a missing dependency: 'simulateAirlockFrequency'. Either include it or remove the dependency array.",["166"],"no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"173","fix":"175"},{"desc":"176","fix":"177"},{"desc":"176","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [brewId, fetchBrew, fetchGravity, fetchIngredients]",{"range":"181","text":"182"},"Update the dependencies array to be: [brews, history]",{"range":"183","text":"184"},"Update the dependencies array to be: [fetchBrews]",{"range":"185","text":"186"},"Update the dependencies array to be: [activeBrew, fetchAirlocks]",{"range":"187","text":"188"},{"range":"189","text":"188"},"Update the dependencies array to be: [activeBrew, fetchTemperatures]",{"range":"190","text":"191"},{"range":"192","text":"191"},"Update the dependencies array to be: [frequency, simulateAirlockFrequency]",{"range":"193","text":"194"},[1285,1293],"[brewId, fetchBrew, fetchGravity, fetchIngredients]",[1383,1390],"[brews, history]",[415,417],"[fetchBrews]",[617,629],"[activeBrew, fetchAirlocks]",[654,666],[642,654],"[activeBrew, fetchTemperatures]",[639,651],[820,831],"[frequency, simulateAirlockFrequency]"]