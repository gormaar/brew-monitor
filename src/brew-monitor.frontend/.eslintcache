[{"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\index.tsx":"1","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\app.tsx":"2","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\screens\\brewFormScreen\\index.tsx":"3","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\screens\\dashboardScreen\\index.tsx":"4","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useBrew.ts":"5","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useIngredients.ts":"6","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useGravity.ts":"7","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\index.tsx":"8","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\navbar\\index.tsx":"9","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\constants.ts":"10","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\gravity\\index.tsx":"11","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\airlock\\longTermAirlock\\index.tsx":"12","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\airlock\\shortTermAirlock\\index.tsx":"13","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\temperature\\shortTermTemperature\\index.tsx":"14","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\temperature\\longTermTemperature\\index.tsx":"15","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\details\\detailsTable\\index.tsx":"16","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\ingredients\\hopsGraph\\index.tsx":"17","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\ingredients\\barleyGraph\\index.tsx":"18","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\status\\index.tsx":"19","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useAirlock.ts":"20","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useTemperature.ts":"21","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\respirator\\index.tsx":"22","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\graphs\\line\\index.tsx":"23","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\graphs\\bar\\index.tsx":"24","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\graphs\\pie\\index.tsx":"25","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\brewSelctor\\index.tsx":"26"},{"size":392,"mtime":1630658118309,"results":"27","hashOfConfig":"28"},{"size":553,"mtime":1630658118289,"results":"29","hashOfConfig":"28"},{"size":688,"mtime":1630658118310,"results":"30","hashOfConfig":"28"},{"size":2043,"mtime":1637500270609,"results":"31","hashOfConfig":"28"},{"size":2107,"mtime":1637498640286,"results":"32","hashOfConfig":"28"},{"size":975,"mtime":1634675385835,"results":"33","hashOfConfig":"28"},{"size":888,"mtime":1634675363087,"results":"34","hashOfConfig":"28"},{"size":1873,"mtime":1637573743764,"results":"35","hashOfConfig":"28"},{"size":483,"mtime":1618133923141,"results":"36","hashOfConfig":"28"},{"size":366,"mtime":1637185129086,"results":"37","hashOfConfig":"28"},{"size":1079,"mtime":1637514747890,"results":"38","hashOfConfig":"28"},{"size":1462,"mtime":1637574387362,"results":"39","hashOfConfig":"28"},{"size":1438,"mtime":1637574416329,"results":"40","hashOfConfig":"28"},{"size":1323,"mtime":1637574359472,"results":"41","hashOfConfig":"28"},{"size":1476,"mtime":1637574335272,"results":"42","hashOfConfig":"28"},{"size":2323,"mtime":1637575019663,"results":"43","hashOfConfig":"28"},{"size":706,"mtime":1637574260675,"results":"44","hashOfConfig":"28"},{"size":742,"mtime":1637573765502,"results":"45","hashOfConfig":"28"},{"size":1650,"mtime":1637573637780,"results":"46","hashOfConfig":"28"},{"size":931,"mtime":1634675464709,"results":"47","hashOfConfig":"28"},{"size":970,"mtime":1634675410435,"results":"48","hashOfConfig":"28"},{"size":984,"mtime":1630658118301,"results":"49","hashOfConfig":"28"},{"size":2305,"mtime":1630658118290,"results":"50","hashOfConfig":"28"},{"size":2738,"mtime":1630658118290,"results":"51","hashOfConfig":"28"},{"size":2606,"mtime":1637514811374,"results":"52","hashOfConfig":"28"},{"size":1666,"mtime":1637578227783,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"p3ijex",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\index.tsx",[],["111","112"],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\app.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\screens\\brewFormScreen\\index.tsx",["113"],"import React, { FC, Fragment } from 'react';\r\nimport { Box, Typography, Tabs, Tab } from '@material-ui/core';\r\n\r\nimport Navbar from '../../components/common/navbar';\r\nimport './styles.scss';\r\n\r\nconst BrewFormScreen: FC = () => {\r\n  return (\r\n    <Fragment>\r\n      <Navbar>\r\n        <Tab></Tab>\r\n      </Navbar>\r\n      <Box className=\"mainContentWrapper\">\r\n        <Typography variant=\"h3\" gutterBottom className=\"formHeader\">\r\n          Create brew\r\n        </Typography>\r\n        <Box className=\"formContainer\">\r\n          <Box className=\"brewForm\">\r\n            <h3>Brew</h3>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BrewFormScreen;\r\n","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\screens\\dashboardScreen\\index.tsx",["114","115","116"],"import React, { FC, Fragment, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Box, Typography, makeStyles } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Statistics from '../../components/statistics';\r\nimport Navbar from '../../components/common/navbar';\r\nimport BrewSelector from '../../components/common/brewSelctor';\r\nimport useBrew from '../../hooks/useBrew';\r\nimport useIngredients from '../../hooks/useIngredients';\r\nimport useGravity from '../../hooks/useGravity';\r\nimport './styles.scss';\r\n\r\ntype DashBoardParams = {\r\n  brewId: string;\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  brewFormButton: {\r\n    position: 'absolute',\r\n    right: 16,\r\n    backgroundColor: '#7fc97f',\r\n    '&:hover': {\r\n      backgroundColor: '#97f097',\r\n    },\r\n  },\r\n});\r\n\r\nconst DashboardScreen: FC = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { brewId } = useParams<DashBoardParams>();\r\n  const { brew, brews, fetchBrew } = useBrew();\r\n  const { ingredients, fetchIngredients } = useIngredients();\r\n  const { fetchGravity, gravity } = useGravity();\r\n\r\n  useEffect(() => {\r\n    if (brewId) {\r\n      fetchIngredients(brewId);\r\n      fetchBrew(brewId);\r\n      fetchGravity(brewId);\r\n    }\r\n  }, [brewId]);\r\n\r\n  useEffect(() => {\r\n    if (brews[0]) history.push(`/brew/${brews[0]?.id}`);\r\n  }, [brews]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar>\r\n        {brew && <BrewSelector brews={brews} activeBrew={brew} />}\r\n        {/* <Button type=\"button\" onClick={() => history.push('/brew/create')} className={classes.brewFormButton}>\r\n          Create brew\r\n        </Button> */}\r\n      </Navbar>\r\n      <Box className=\"dashboard\">\r\n        <Box className=\"dashboard__header\">\r\n          <Typography variant=\"h3\" gutterBottom>\r\n            {brew?.name}\r\n          </Typography>\r\n        </Box>\r\n        <Statistics activeBrew={brew} ingredients={ingredients} gravity={gravity} />\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DashboardScreen;\r\n","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useBrew.ts",["117"],"import { useState, useEffect } from 'react';\r\nimport { getBackendBaseUri } from '../constants'\r\nimport Brew from '../types/Brew';\r\n\r\nconst header = {\r\n  'Content-type': 'application/json',\r\n};\r\n\r\nconst useBrew = () => {\r\n  const [brews, setBrews] = useState<Brew[]>([]);\r\n  const [brew, setBrew] = useState<Brew>(brews[0]);\r\n  const apiBaseUrl = getBackendBaseUri();\r\n\r\n  useEffect(() => {\r\n      fetchBrews();\r\n  }, []);\r\n\r\n  const fetchBrews = async (): Promise<void> => {\r\n    const options = { method: 'GET', header: { 'Content-Type': 'application/json' } };\r\n    try {\r\n      const response = await fetch(`${apiBaseUrl}/brews`, options).then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      });\r\n      const data = (await response.json()) as Brew[];\r\n      setBrews(data);\r\n    } catch (e) {\r\n      console.log(`Error while fetching brews: ${e}`);\r\n    }\r\n  };\r\n\r\n  const fetchBrew = async (brewId: string): Promise<void> => {\r\n    const options = { method: 'GET', header: { 'Content-Type': 'application/json' } };\r\n    try {\r\n      const response = await fetch(`${apiBaseUrl}/brew/${brewId}`, options).then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      });\r\n      const data = (await response.json()) as Brew;\r\n      setBrew(data);\r\n    } catch (e) {\r\n      console.log(`Error while fetching brewId ${brewId}: ${e}`);\r\n    }\r\n  }; \r\n\r\n  const updateBrew = async (brew: Brew): Promise<void> => {\r\n    const options = { method: 'PUT', headers: header, body: JSON.stringify(brew) };\r\n    try {\r\n      await fetch(`${apiBaseUrl}/brew/update`, options).then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      });\r\n    } catch (e) {\r\n      console.log(`Error while updating brewId ${brew.id}: ${e}`);\r\n    }\r\n  };\r\n\r\n  return {\r\n    brew,\r\n    brews,\r\n    fetchBrew,\r\n    fetchBrews,\r\n    updateBrew,\r\n  };\r\n};\r\n\r\nexport default useBrew;\r\n","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useIngredients.ts",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useGravity.ts",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\navbar\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\constants.ts",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\gravity\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\airlock\\longTermAirlock\\index.tsx",["118"],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\airlock\\shortTermAirlock\\index.tsx",["119"],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\temperature\\shortTermTemperature\\index.tsx",["120"],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\temperature\\longTermTemperature\\index.tsx",["121"],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\details\\detailsTable\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\ingredients\\hopsGraph\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\ingredients\\barleyGraph\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\status\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useAirlock.ts",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useTemperature.ts",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\respirator\\index.tsx",["122"],"import React, { FC, Fragment, useState, useEffect } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport './styles.scss';\r\n\r\ntype RespiratorProps = {\r\n  frequency: number | undefined;\r\n};\r\n\r\nconst Respirator: FC<RespiratorProps> = ({ frequency }) => {\r\n  const [blink, setBlink] = useState<boolean>(false);\r\n\r\n  const sleep = (milliseconds: number) => {\r\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\r\n  };\r\n  const simulateAirlockFrequency = async () => {\r\n    if (frequency) {\r\n      const frequencyTimeout = 60 / frequency;\r\n      for (let i = 0; i <= frequency; i++) {\r\n        setBlink(true);\r\n        await sleep(1000);\r\n        setBlink(false);\r\n        await sleep(frequencyTimeout * 1000);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    simulateAirlockFrequency();\r\n  }, [frequency]);\r\n\r\n  return <Fragment>{blink ? <Box className=\"respirator\" /> : <Box className=\"respirator--blink\" />}</Fragment>;\r\n};\r\n\r\nexport default Respirator;\r\n","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\graphs\\line\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\graphs\\bar\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\graphs\\pie\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\brewSelctor\\index.tsx",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":2,"column":27,"nodeType":"129","messageId":"130","endLine":2,"endColumn":31},{"ruleId":"127","severity":1,"message":"131","line":30,"column":9,"nodeType":"129","messageId":"130","endLine":30,"endColumn":16},{"ruleId":"132","severity":1,"message":"133","line":43,"column":6,"nodeType":"134","endLine":43,"endColumn":14,"suggestions":"135"},{"ruleId":"132","severity":1,"message":"136","line":47,"column":6,"nodeType":"134","endLine":47,"endColumn":13,"suggestions":"137"},{"ruleId":"132","severity":1,"message":"138","line":16,"column":6,"nodeType":"134","endLine":16,"endColumn":8,"suggestions":"139"},{"ruleId":"132","severity":1,"message":"140","line":21,"column":6,"nodeType":"134","endLine":21,"endColumn":18,"suggestions":"141"},{"ruleId":"132","severity":1,"message":"140","line":22,"column":6,"nodeType":"134","endLine":22,"endColumn":18,"suggestions":"142"},{"ruleId":"132","severity":1,"message":"143","line":21,"column":6,"nodeType":"134","endLine":21,"endColumn":18,"suggestions":"144"},{"ruleId":"132","severity":1,"message":"143","line":21,"column":6,"nodeType":"134","endLine":21,"endColumn":18,"suggestions":"145"},{"ruleId":"132","severity":1,"message":"146","line":29,"column":6,"nodeType":"134","endLine":29,"endColumn":17,"suggestions":"147"},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"@typescript-eslint/no-unused-vars","'Tabs' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchBrew', 'fetchGravity', and 'fetchIngredients'. Either include them or remove the dependency array.","ArrayExpression",["150"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["151"],"React Hook useEffect has a missing dependency: 'fetchBrews'. Either include it or remove the dependency array.",["152"],"React Hook useEffect has a missing dependency: 'fetchAirlocks'. Either include it or remove the dependency array.",["153"],["154"],"React Hook useEffect has a missing dependency: 'fetchTemperatures'. Either include it or remove the dependency array.",["155"],["156"],"React Hook useEffect has a missing dependency: 'simulateAirlockFrequency'. Either include it or remove the dependency array.",["157"],"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"164","fix":"166"},{"desc":"167","fix":"168"},{"desc":"167","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [brewId, fetchBrew, fetchGravity, fetchIngredients]",{"range":"172","text":"173"},"Update the dependencies array to be: [brews, history]",{"range":"174","text":"175"},"Update the dependencies array to be: [fetchBrews]",{"range":"176","text":"177"},"Update the dependencies array to be: [activeBrew, fetchAirlocks]",{"range":"178","text":"179"},{"range":"180","text":"179"},"Update the dependencies array to be: [activeBrew, fetchTemperatures]",{"range":"181","text":"182"},{"range":"183","text":"182"},"Update the dependencies array to be: [frequency, simulateAirlockFrequency]",{"range":"184","text":"185"},[1282,1290],"[brewId, fetchBrew, fetchGravity, fetchIngredients]",[1380,1387],"[brews, history]",[417,419],"[fetchBrews]",[617,629],"[activeBrew, fetchAirlocks]",[654,666],[642,654],"[activeBrew, fetchTemperatures]",[639,651],[820,831],"[frequency, simulateAirlockFrequency]"]