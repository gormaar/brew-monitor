[{"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\index.tsx":"1","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\app.tsx":"2","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\screens\\brewFormScreen\\index.tsx":"3","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\screens\\dashboardScreen\\index.tsx":"4","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useBrew.ts":"5","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useIngredients.ts":"6","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useGravity.ts":"7","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\index.tsx":"8","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\navbar\\index.tsx":"9","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\constants.ts":"10","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\gravity\\index.tsx":"11","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\airlock\\longTermAirlock\\index.tsx":"12","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\airlock\\shortTermAirlock\\index.tsx":"13","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\temperature\\shortTermTemperature\\index.tsx":"14","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\temperature\\longTermTemperature\\index.tsx":"15","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\details\\detailsTable\\index.tsx":"16","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\ingredients\\hopsGraph\\index.tsx":"17","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\ingredients\\barleyGraph\\index.tsx":"18","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\status\\index.tsx":"19","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useAirlock.ts":"20","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useTemperature.ts":"21","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\respirator\\index.tsx":"22","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\graphs\\line\\index.tsx":"23","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\graphs\\bar\\index.tsx":"24","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\graphs\\pie\\index.tsx":"25","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\brewSelctor\\index.tsx":"26"},{"size":392,"mtime":1630658118309,"results":"27","hashOfConfig":"28"},{"size":553,"mtime":1630658118289,"results":"29","hashOfConfig":"28"},{"size":682,"mtime":1640086635262,"results":"30","hashOfConfig":"28"},{"size":1717,"mtime":1640086637845,"results":"31","hashOfConfig":"28"},{"size":2107,"mtime":1639762477436,"results":"32","hashOfConfig":"28"},{"size":975,"mtime":1639762477437,"results":"33","hashOfConfig":"28"},{"size":888,"mtime":1639762477437,"results":"34","hashOfConfig":"28"},{"size":2401,"mtime":1640086919698,"results":"35","hashOfConfig":"28"},{"size":483,"mtime":1618133923141,"results":"36","hashOfConfig":"28"},{"size":366,"mtime":1639762477434,"results":"37","hashOfConfig":"28"},{"size":1079,"mtime":1639777382545,"results":"38","hashOfConfig":"28"},{"size":1232,"mtime":1640086615802,"results":"39","hashOfConfig":"28"},{"size":1206,"mtime":1640086618497,"results":"40","hashOfConfig":"28"},{"size":1087,"mtime":1640086629399,"results":"41","hashOfConfig":"28"},{"size":1242,"mtime":1640086626555,"results":"42","hashOfConfig":"28"},{"size":2311,"mtime":1640086646481,"results":"43","hashOfConfig":"28"},{"size":706,"mtime":1640086608914,"results":"44","hashOfConfig":"28"},{"size":1196,"mtime":1640086605190,"results":"45","hashOfConfig":"28"},{"size":1595,"mtime":1640086621515,"results":"46","hashOfConfig":"28"},{"size":931,"mtime":1639762477435,"results":"47","hashOfConfig":"28"},{"size":970,"mtime":1639762477438,"results":"48","hashOfConfig":"28"},{"size":984,"mtime":1630658118301,"results":"49","hashOfConfig":"28"},{"size":2305,"mtime":1640086594612,"results":"50","hashOfConfig":"28"},{"size":2740,"mtime":1640086599243,"results":"51","hashOfConfig":"28"},{"size":1497,"mtime":1640086586703,"results":"52","hashOfConfig":"28"},{"size":1666,"mtime":1639762477424,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"p3ijex",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\index.tsx",[],["109","110"],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\app.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\screens\\brewFormScreen\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\screens\\dashboardScreen\\index.tsx",["111","112","113"],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useBrew.ts",["114"],"import { useState, useEffect } from 'react';\r\nimport { getBackendBaseUri } from '../constants'\r\nimport Brew from '../types/Brew';\r\n\r\nconst header = {\r\n  'Content-type': 'application/json',\r\n};\r\n\r\nconst useBrew = () => {\r\n  const [brews, setBrews] = useState<Brew[]>([]);\r\n  const [brew, setBrew] = useState<Brew>(brews[0]);\r\n  const apiBaseUrl = getBackendBaseUri();\r\n\r\n  useEffect(() => {\r\n      fetchBrews();\r\n  }, []);\r\n\r\n  const fetchBrews = async (): Promise<void> => {\r\n    const options = { method: 'GET', header: { 'Content-Type': 'application/json' } };\r\n    try {\r\n      const response = await fetch(`${apiBaseUrl}/brews`, options).then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      });\r\n      const data = (await response.json()) as Brew[];\r\n      setBrews(data);\r\n    } catch (e) {\r\n      console.log(`Error while fetching brews: ${e}`);\r\n    }\r\n  };\r\n\r\n  const fetchBrew = async (brewId: string): Promise<void> => {\r\n    const options = { method: 'GET', header: { 'Content-Type': 'application/json' } };\r\n    try {\r\n      const response = await fetch(`${apiBaseUrl}/brew/${brewId}`, options).then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      });\r\n      const data = (await response.json()) as Brew;\r\n      setBrew(data);\r\n    } catch (e) {\r\n      console.log(`Error while fetching brewId ${brewId}: ${e}`);\r\n    }\r\n  }; \r\n\r\n  const updateBrew = async (brew: Brew): Promise<void> => {\r\n    const options = { method: 'PUT', headers: header, body: JSON.stringify(brew) };\r\n    try {\r\n      await fetch(`${apiBaseUrl}/brew/update`, options).then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      });\r\n    } catch (e) {\r\n      console.log(`Error while updating brewId ${brew.id}: ${e}`);\r\n    }\r\n  };\r\n\r\n  return {\r\n    brew,\r\n    brews,\r\n    fetchBrew,\r\n    fetchBrews,\r\n    updateBrew,\r\n  };\r\n};\r\n\r\nexport default useBrew;\r\n","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useIngredients.ts",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useGravity.ts",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\index.tsx",["115"],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\navbar\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\constants.ts",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\gravity\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\airlock\\longTermAirlock\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\airlock\\shortTermAirlock\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\temperature\\shortTermTemperature\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\temperature\\longTermTemperature\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\details\\detailsTable\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\ingredients\\hopsGraph\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\ingredients\\barleyGraph\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\status\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useAirlock.ts",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\hooks\\useTemperature.ts",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\statistics\\components\\respirator\\index.tsx",["116"],"import React, { FC, Fragment, useState, useEffect } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport './styles.scss';\r\n\r\ntype RespiratorProps = {\r\n  frequency: number | undefined;\r\n};\r\n\r\nconst Respirator: FC<RespiratorProps> = ({ frequency }) => {\r\n  const [blink, setBlink] = useState<boolean>(false);\r\n\r\n  const sleep = (milliseconds: number) => {\r\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\r\n  };\r\n  const simulateAirlockFrequency = async () => {\r\n    if (frequency) {\r\n      const frequencyTimeout = 60 / frequency;\r\n      for (let i = 0; i <= frequency; i++) {\r\n        setBlink(true);\r\n        await sleep(1000);\r\n        setBlink(false);\r\n        await sleep(frequencyTimeout * 1000);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    simulateAirlockFrequency();\r\n  }, [frequency]);\r\n\r\n  return <Fragment>{blink ? <Box className=\"respirator\" /> : <Box className=\"respirator--blink\" />}</Fragment>;\r\n};\r\n\r\nexport default Respirator;\r\n","C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\graphs\\line\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\graphs\\bar\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\graphs\\pie\\index.tsx",[],"C:\\Users\\Gorm-Erik\\Desktop\\brew-monitor\\src\\brew-monitor.frontend\\src\\components\\common\\brewSelctor\\index.tsx",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":29,"column":9,"nodeType":"123","messageId":"124","endLine":29,"endColumn":16},{"ruleId":"125","severity":1,"message":"126","line":38,"column":6,"nodeType":"127","endLine":38,"endColumn":14,"suggestions":"128"},{"ruleId":"125","severity":1,"message":"129","line":42,"column":6,"nodeType":"127","endLine":42,"endColumn":13,"suggestions":"130"},{"ruleId":"125","severity":1,"message":"131","line":16,"column":6,"nodeType":"127","endLine":16,"endColumn":8,"suggestions":"132"},{"ruleId":"125","severity":1,"message":"133","line":37,"column":6,"nodeType":"127","endLine":37,"endColumn":18,"suggestions":"134"},{"ruleId":"125","severity":1,"message":"135","line":29,"column":6,"nodeType":"127","endLine":29,"endColumn":17,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"@typescript-eslint/no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchBrew'. Either include it or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["140"],"React Hook useEffect has a missing dependency: 'fetchBrews'. Either include it or remove the dependency array.",["141"],"React Hook useEffect has missing dependencies: 'fetchAirlocks', 'fetchGravity', 'fetchIngredients', and 'fetchTemperatures'. Either include them or remove the dependency array.",["142"],"React Hook useEffect has a missing dependency: 'simulateAirlockFrequency'. Either include it or remove the dependency array.",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [brewId, fetchBrew]",{"range":"154","text":"155"},"Update the dependencies array to be: [brews, history]",{"range":"156","text":"157"},"Update the dependencies array to be: [fetchBrews]",{"range":"158","text":"159"},"Update the dependencies array to be: [activeBrew, fetchAirlocks, fetchGravity, fetchIngredients, fetchTemperatures]",{"range":"160","text":"161"},"Update the dependencies array to be: [frequency, simulateAirlockFrequency]",{"range":"162","text":"163"},[1000,1008],"[brewId, fetchBrew]",[1098,1105],"[brews, history]",[417,419],"[fetchBrews]",[1516,1528],"[activeBrew, fetchAirlocks, fetchGravity, fetchIngredients, fetchTemperatures]",[820,831],"[frequency, simulateAirlockFrequency]"]